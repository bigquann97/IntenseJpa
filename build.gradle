plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'me.quann'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter'

    // PostgreSQL 의존성 추가
    implementation 'org.postgresql:postgresql:42.2.27'

    // 4. SpringBoot 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    // JUNIT 테스트를 위한 기본 의존성
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    // 5. JDBC template 등.. Spring 의존성을 받기 위한 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // 7. Mybatis 실습을 위한 의존성
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.0'
    testCompileClasspath 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.1'
    runtimeOnly 'org.postgresql:postgresql'

    // 7. 롬복 - 개발편의
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // 8. RawJPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // 9. SpringBoot HATEOAS 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'

}

tasks.named('test') {
    useJUnitPlatform()
}
